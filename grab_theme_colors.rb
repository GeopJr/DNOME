GTK_CSS = "#{Dir.home}/.config/gtk-4.0/gtk.css"
DEFINE_REGEX = /@define-color ([a-zA-Z0-9_-]+) (#[a-fA-F0-9]+)/im
OUT = "#{__dir__}/src/modules/variables/gtk.less"

TEMPLATE_COMMENT = <<-LESS
// This file is for gtk variables
// generated by grab_theme_colors.rb
// Delete this file to disable gtk theming
LESS

LESS_VARIABLES = {} # : String => String

def generate_file_content(
    gtk_variables, # [] of String
    less_variables # [] of String
) # : String
<<-LESS
#{TEMPLATE_COMMENT}

#{gtk_variables.join("\n")}

#{less_variables.join("\n")}
LESS
end

def generate_less_variable(
    name, # : String
    value, # : String
    same_for_light = false # : Bool
) # : String
    res = "@#{name}: #{value};"
    res += "\n@#{name}-light: #{value};" if same_for_light
    res
end

def generate_less # : [] of String
    res = [
        generate_less_variable("hover_modifier", "tint(@bg, 15%)"),
        generate_less_variable("hover_modifier-light", "shade(@bg-light, 15%)"),
        generate_less_variable("item_selected_hover", "tint(@bg, 25%)"),
        generate_less_variable("item_selected_hover-light", "shade(@bg-light, 25%)"),
        generate_less_variable("item_selected", "tint(@bg, 30%)"),
        generate_less_variable("item_selected-light", "shade(@bg-light, 30%)")
    ] # of String


    res << generate_less_variable("accent", "@gtk_accent_bg_color", true) if LESS_VARIABLES.has_key?("@gtk_accent_bg_color")
    res << generate_less_variable("error", "@gtk_destructive_bg_color", true) if LESS_VARIABLES.has_key?("@gtk_destructive_bg_color")
    res << generate_less_variable("warning", "@gtk_accent_bg_color") if LESS_VARIABLES.has_key?("@gtk_orange_3")
    res << generate_less_variable("warning-light", "@gtk_accent_bg_color") if LESS_VARIABLES.has_key?("@gtk_orange_2")
    res << generate_less_variable("bg", "@gtk_window_bg_color", true) if LESS_VARIABLES.has_key?("@gtk_window_bg_color")
    res << generate_less_variable("base", "@gtk_view_bg_color", true) if LESS_VARIABLES.has_key?("@gtk_view_bg_color")
    res << generate_less_variable("floating", "@gtk_dialog_bg_color", true) if LESS_VARIABLES.has_key?("@gtk_dialog_bg_color")
    res << generate_less_variable("searchbox", "@gtk_headerbar_bg_color", true) if LESS_VARIABLES.has_key?("@gtk_headerbar_bg_color")

    if LESS_VARIABLES.has_key?("@gtk_view_bg_color")
        res << generate_less_variable("border", "lighten(@gtk_view_bg_color, 15%)") 
        res << generate_less_variable("border-light", "darken(@gtk_view_bg_color, 15%)") 
    end

    if LESS_VARIABLES.has_key?("@gtk_window_fg_color")
        res << generate_less_variable("fg", "@gtk_window_fg_color", true)
        res << generate_less_variable("text-color", "@gtk_window_fg_color", true)
    end

    if LESS_VARIABLES.has_key?("@gtk_popover_bg_color")
        res << generate_less_variable("popover_hover", "tint(@gtk_popover_bg_color, 10%)")
        res << generate_less_variable("popover_hover-light", "shade(@gtk_popover_bg_color, 10%)")
        res << generate_less_variable("popover_selected", "tint(@gtk_popover_bg_color, 15%)")
        res << generate_less_variable("popover_selected-light", "shade(@gtk_popover_bg_color, 15%)")
    end

    res
end

if File.file?(GTK_CSS)
    puts "Reading \"#{GTK_CSS}\"..."
    source = File.read(GTK_CSS)
    found = source.scan(DEFINE_REGEX)
    puts "Found #{found.size} variables"
    
    if found.size > 0
        out = []

        found.each do |g|
            var_name = "@gtk_#{g[0]}"
            LESS_VARIABLES[var_name] = g[1]
            out << "#{var_name}: #{g[1]};"
        end

        puts "Generating file..."
        File.write(OUT, generate_file_content(out, generate_less()))
        puts "Finished!"
        puts "Be sure to change your Discord theme in settings to the version matching your custom theme (Light/Dark)"
    end
else
    puts "\"#{GTK_CSS}\" does not exist"
end
# variables = File.read("")